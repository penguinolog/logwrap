# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 2.0
envlist = pep8, pep257, py{27,py}, pylint, docs, bandit, mypy
skipsdist = True
skip_missing_interpreters = True

[testenv]
recreate = True
usedevelop = False
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
setev = PYTHONDONTWRITEBYTECODE=1
deps =
  sphinx
  pytest
  pytest-cov
  pytest-html
  pytest-sugar
  -r{toxinidir}/CI_REQUIREMENTS.txt
    py{27,py}: mock

commands =
  pip freeze
  python setup.py develop -v
  py.test -vvv --junitxml=unit_result.xml --html=report.html --cov-config .coveragerc --cov-report html --cov=logwrap {posargs:test}
  coverage report --fail-under 87

[testenv:venv]
commands = {posargs:}

[testenv:pep8]
deps =
    flake8
commands = flake8

[testenv:pep257]
deps =
  pydocstyle
commands = pydocstyle logwrap

[testenv:install]
deps =
commands = pip install ./ -vvv -U

[testenv:pylint]
usedevelop = False
deps =
  pylint<2
  isort[pyproject,requirements]
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands = pylint logwrap

[testenv:docs]
usedevelop = False
deps =
  sphinx
commands = python setup.py build_sphinx

[testenv:bandit]
usedevelop = False
deps = bandit
commands = bandit -r logwrap

[testenv:dep-graph]
envdir = {toxworkdir}/dep-graph
deps =
  pipenv
commands =
  pipenv install -r {toxinidir}/build_requirements.txt --skip-lock
  pipenv graph

[testenv:mypy]
deps =
  mypy>=0.700
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands = mypy --strict logwrap

[testenv:isort]
deps =
    isort[pyproject,requirements]
commands =
    isort -rc logwrap
