# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 2.0
envlist = black, pep8, pylint, mypy, bandit, pep257, py{36,37}, docs, py{36,37}-nocov
skipsdist = True
skip_missing_interpreters = True

[testenv]
recreate = True
usedevelop = False
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
setev = PYTHONDONTWRITEBYTECODE=1
deps =
  sphinx
  pytest
  pytest-cov
  pytest-html
  pytest-sugar
  py3{6,7,8}-nocov: Cython
  -r{toxinidir}/CI_REQUIREMENTS.txt

commands =
  pip freeze
  python setup.py develop -v
  py.test -vvv --junitxml=unit_result.xml --html=report.html --self-contained-html --cov-config .coveragerc --cov-report html --cov=logwrap {posargs:test}
  coverage report --fail-under 87

[testenv:py36-nocov]
commands =
  python setup.py bdist_wheel
  pip install logwrap --no-index -f dist
  py.test -vv {posargs:test}

[testenv:py37-nocov]
commands =
  python setup.py bdist_wheel
  pip install logwrap --no-index -f dist
  py.test -vv {posargs:test}

[testenv:py38-nocov]
commands =
  python setup.py bdist_wheel
  pip install logwrap --no-index -f dist
  py.test -vv {posargs:test}

[testenv:venv]
commands = {posargs:}

[testenv:pep8]
deps =
  flake8
  flake8-bugbear
commands = flake8

[testenv:pep257]
deps =
  pydocstyle
commands = pydocstyle logwrap

[testenv:doc8]
deps =
  doc8
  Pygments
commands = doc8 README.rst doc/source

[testenv:install]
deps =
commands = pip install ./ -vvv -U

[testenv:pylint]
deps =
  pylint >= 2.2
  isort[pyproject,requirements]
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands = pylint logwrap

[testenv:docs]
deps =
  sphinx
commands = python setup.py build_sphinx

[testenv:bandit]
deps = bandit
commands = bandit -r logwrap

[testenv:dep-graph]
envdir = {toxworkdir}/dep-graph
deps =
  pipenv
commands =
  pipenv install -r {toxinidir}/build_requirements.txt --skip-lock
  pipenv graph

[testenv:black]
deps =
  black
commands =
  black logwrap

[testenv:mypy]
deps =
  mypy>=0.700
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands = mypy --strict logwrap

[testenv:isort]
deps =
  isort[pyproject,requirements]
commands =
  isort -rc logwrap
